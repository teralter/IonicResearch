// <auto-generated />
using System;
using IonicResearch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IonicResearch.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190210140424_Outlet")]
    partial class Outlet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IonicResearch.Data.Models.OutletForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Inn")
                        .HasMaxLength(200);

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<long>("OpeningTime");

                    b.Property<int>("OutletTypeId");

                    b.Property<DateTime>("RepDate");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OutletTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("OutletForms");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletFormProduct", b =>
                {
                    b.Property<int>("FormId");

                    b.Property<int>("ProductId");

                    b.HasKey("FormId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OutletFormProducts");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FormId");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Path")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("OutletPhotos");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("OutletProducts");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletType", b =>
                {
                    b.Property<int>("OutletTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("OutletTypeId");

                    b.ToTable("OutletTypes");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletForm", b =>
                {
                    b.HasOne("IonicResearch.Data.Models.OutletType", "Type")
                        .WithMany()
                        .HasForeignKey("OutletTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IonicResearch.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletFormProduct", b =>
                {
                    b.HasOne("IonicResearch.Data.Models.OutletForm", "Form")
                        .WithMany("FormProducts")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IonicResearch.Data.Models.OutletProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IonicResearch.Data.Models.OutletPhoto", b =>
                {
                    b.HasOne("IonicResearch.Data.Models.OutletForm", "Form")
                        .WithMany("Photos")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
